 @model AttendanceSummaryViewModel



    <select id="durationSelect" onchange="fetchAttendanceData()">
        <option value="1">One Month</option>
        <option value="6">Six Months</option>
        <option value="12">One Year</option>
    </select>
    <!-- Chart -->
    <div style="max-width: 800px; margin:50px auto;">
        <canvas id="attendanceChart"></canvas>
    </div>
 
        <script>
            var ctx = document.getElementById('attendanceChart').getContext('2d');
            var attendanceData = @Html.Raw(Json.Serialize(Model.AttendanceData));


            var dates = attendanceData.map(a => a.Date);
            var lateCount = @Model.LateCount;
            var onTimeCount = attendanceData.length - lateCount;
            var absentCount = @Model.AbsentCount;
            var chartData = [lateCount, onTimeCount, absentCount];
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Late', 'On Time', 'Absent'],
                    datasets: [{
                        label: 'Attendance State',
                        data: chartData,
                        backgroundColor: [
                            'rgba(108, 93, 220, 0.2)',
                            'rgba(108, 93, 220, 0.2)',
                            'rgba(108, 93, 220, 0.2)'
                        ],
                        borderColor: [
                            'rgba(108, 93, 220, 1)',
                            'rgba(108, 93, 220, 1)',
                            'rgba(108, 93, 220, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            function fetchAttendanceData() {
                var duration = document.getElementById('durationSelect').value;
                var startDate = new Date();

                if (duration === '1') {
                    startDate.setMonth(startDate.getMonth() - 1);
                } else if (duration === '6') {
                    startDate.setMonth(startDate.getMonth() - 6);
                } else if (duration === '12') {
                    startDate.setFullYear(startDate.getFullYear() - 1);
                }


                $.ajax({
                    url: '/Student/FetchAttendanceData',
                    method: 'GET',
                    data: {
                        userId: @Model.UserId,
                        startDate: startDate.toISOString().split('T')[0]
                    },
                    success: function (data) {

                        updateAttendanceSummary(data);
                        updateChart(data);
                        console.log(data)
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching attendance data:', error);
                    }
                });
            }


            function updateAttendanceSummary(data) {
                var lateCount = 0;
                var onTimeCount = 0;
                var absentCount = 0;
                var attendanceDataLength = data.length;
                var thresholdHour = 9;

                for (var i = 0; i < attendanceDataLength; i++) {
                    var checkInTime = data[i].checkIn;
                    var hour = parseInt(checkInTime.split(':')[0]);
                    if (hour > thresholdHour || (hour === thresholdHour && checkInTime.split(':')[1] > 0)) {
                        lateCount++;
                    } else {
                        onTimeCount++;
                    }
                }


                var duration = document.getElementById('durationSelect').value;
                var daysInDuration = duration === '1' ? 30 : (duration === '6' ? 180 : 365);
                absentCount = daysInDuration - (lateCount + onTimeCount);


                $('#lateCount').text('Late Count: ' + lateCount);
                $('#onTimeCount').text('On Time Count: ' + onTimeCount);
                $('#absentCount').text('Absent Count: ' + absentCount);
            }






            function updateChart(data) {
                var lateCount = 0;
                var onTimeCount = 0;
                var attendanceDataLength = data.length;
                var thresholdHour = 9;

                for (var i = 0; i < attendanceDataLength; i++) {
                    var checkInTime = data[i].checkIn;
                    var hour = parseInt(checkInTime.split(':')[0]);
                    if (hour > thresholdHour || (hour === thresholdHour && checkInTime.split(':')[1] > 0)) {
                        lateCount++;
                    } else {
                        onTimeCount++;
                    }
                }


                var duration = document.getElementById('durationSelect').value;
                var daysInDuration = duration === '1' ? 30 : (duration === '6' ? 180 : 365);
                var absentCount = daysInDuration - (lateCount + onTimeCount);


                myChart.data.datasets[0].data = [lateCount, onTimeCount, absentCount];
                myChart.update();
            }





        </script>
